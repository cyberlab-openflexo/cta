use org.openflexo.foundation.fml.rt.FMLRTVirtualModelInstanceModelSlot;

/**
 * 
 * @version 0.1
 */
@VirtualModel(uri="http://ensta-bretagne.fr/cyber/cta/TSMExecutionModel.fml")
public class TSMExecutionModel {

  public int globalCounter;
  public CTA cta;

  @CreationScheme  
  TSMExecutionModel:init() {  
    log ("Initialize TSMExecutionModel " + this.name)    
    globalCounter = 0;  
  }  


  @FlexoConcept  
  public class SystemNodeExecutionUnit {  
  
    public int systemNodeCounter;  
    public SystemNode systemNode;  
      
    public FlexoConceptInstanceType<SystemNodeExecutionDefinition> systemNodeExecutionDefinition = systemNode.systemNodeExecutionDefinition;  
  
    @CreationScheme    
    SystemNodeExecutionUnit:init() {    
      log "Init SystemNodeExecution"      
      systemNodeCounter = 0;    
    }    
  
    @DeletionScheme    
    Void delete() {    
      
    }    
  
  
    @FlexoConcept    
    public class ExecutionUnit {    
      
      public int counter;    
      public MachineryAllocation machineryAllocation;    
          
      public FlexoConceptInstanceType<ExecutionUnitDefinition> executionUnitDefinition = machineryAllocation.executionUnitDefinition;    
      
      @CreationScheme      
      ExecutionUnit:init() {      
        log "Init ExecutionUnit"        
        counter = 0;      
      }      
      
      @DeletionScheme      
      Void delete() {      
          
      }      
      
    }    
  
  }  

  @FlexoConcept  
  public class ExecutionUnit {  
  
    public int counter;  
    public MachineryAllocation machineryAllocation;  
      
    public FlexoConceptInstanceType<ExecutionUnitDefinition> executionUnitDefinition = machineryAllocation.executionUnitDefinition;  
  
    @CreationScheme    
    ExecutionUnit:init() {    
      log "Init ExecutionUnit"      
      counter = 0;    
    }    
  
    @DeletionScheme    
    Void delete() {    
      
    }    
  
  }  

  @FlexoConcept  
  public class GuardActionExecutionUnit extends ExecutionUnit  {  
  }  

}
